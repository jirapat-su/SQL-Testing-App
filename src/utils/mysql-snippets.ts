export const mysqlSnippets = [
  {
    body: [
      'SELECT ${1:column1}, ${2:column2}',
      'FROM ${3:table_name}',
      'WHERE ${4:condition};$0',
    ],
    description: 'Basic SELECT statement',
    label: 'SELECT',
    prefix: 'select',
  },
  {
    body: [
      'INSERT INTO ${1:table_name} (${2:column1}, ${3:column2})',
      'VALUES (${4:value1}, ${5:value2});$0',
    ],
    description: 'INSERT statement',
    label: 'INSERT',
    prefix: 'insert',
  },
  {
    body: [
      'UPDATE ${1:table_name}',
      'SET ${2:column1} = ${3:value1}',
      'WHERE ${4:condition};$0',
    ],
    description: 'UPDATE statement',
    label: 'UPDATE',
    prefix: 'update',
  },
  {
    body: ['DELETE FROM ${1:table_name}', 'WHERE ${2:condition};$0'],
    description: 'DELETE statement',
    label: 'DELETE',
    prefix: 'delete',
  },
  {
    body: [
      'CREATE TABLE ${1:table_name} (',
      '    ${2:id} INT AUTO_INCREMENT PRIMARY KEY,',
      '    ${3:column_name} ${4:VARCHAR(255)} ${5:NOT NULL},',
      '    ${6:created_at} TIMESTAMP DEFAULT CURRENT_TIMESTAMP',
      ');$0',
    ],
    description: 'CREATE TABLE statement',
    label: 'CREATE TABLE',
    prefix: 'create_table',
  },
  {
    body: [
      'ALTER TABLE ${1:table_name}',
      'ADD COLUMN ${2:column_name} ${3:VARCHAR(255)} ${4:NOT NULL};$0',
    ],
    description: 'ALTER TABLE statement',
    label: 'ALTER TABLE',
    prefix: 'alter_table',
  },
  {
    body: ['DROP TABLE IF EXISTS ${1:table_name};$0'],
    description: 'DROP TABLE statement',
    label: 'DROP TABLE',
    prefix: 'drop_table',
  },
  {
    body: [
      'SELECT ${1:t1.column1}, ${2:t2.column2}',
      'FROM ${3:table1} t1',
      'INNER JOIN ${4:table2} t2 ON t1.${5:id} = t2.${6:table1_id}',
      'WHERE ${7:condition};$0',
    ],
    description: 'INNER JOIN query',
    label: 'INNER JOIN',
    prefix: 'inner_join',
  },
  {
    body: [
      'SELECT ${1:t1.column1}, ${2:t2.column2}',
      'FROM ${3:table1} t1',
      'LEFT JOIN ${4:table2} t2 ON t1.${5:id} = t2.${6:table1_id}',
      'WHERE ${7:condition};$0',
    ],
    description: 'LEFT JOIN query',
    label: 'LEFT JOIN',
    prefix: 'left_join',
  },
  {
    body: [
      'SELECT ${1:column1}, COUNT(*) as count',
      'FROM ${2:table_name}',
      'GROUP BY ${3:column1}',
      'HAVING COUNT(*) > ${4:1}',
      'ORDER BY count DESC;$0',
    ],
    description: 'GROUP BY with HAVING clause',
    label: 'GROUP BY',
    prefix: 'group_by',
  },
  {
    body: [
      'CREATE INDEX ${1:idx_name} ON ${2:table_name} (${3:column_name});$0',
    ],
    description: 'CREATE INDEX statement',
    label: 'CREATE INDEX',
    prefix: 'create_index',
  },
  {
    body: [
      'DELIMITER //',
      'CREATE PROCEDURE ${1:procedure_name}(',
      '    IN ${2:param_name} ${3:VARCHAR(255)}',
      ')',
      'BEGIN',
      '    ${4:-- procedure body}',
      '    SELECT * FROM ${5:table_name} WHERE ${6:column} = ${2:param_name};',
      'END //',
      'DELIMITER ;$0',
    ],
    description: 'CREATE PROCEDURE statement',
    label: 'STORED PROCEDURE',
    prefix: 'procedure',
  },
  {
    body: [
      'DELIMITER //',
      'CREATE FUNCTION ${1:function_name}(${2:param_name} ${3:VARCHAR(255)})',
      'RETURNS ${4:INT}',
      'READS SQL DATA',
      'BEGIN',
      '    DECLARE result ${4:INT};',
      '    ${5:-- function body}',
      '    SELECT COUNT(*) INTO result FROM ${6:table_name} WHERE ${7:column} = ${2:param_name};',
      '    RETURN result;',
      'END //',
      'DELIMITER ;$0',
    ],
    description: 'CREATE FUNCTION statement',
    label: 'FUNCTION',
    prefix: 'function',
  },
  {
    body: [
      'DELIMITER //',
      'CREATE TRIGGER ${1:trigger_name}',
      '    ${2:BEFORE} ${3:INSERT} ON ${4:table_name}',
      '    FOR EACH ROW',
      'BEGIN',
      '    ${5:-- trigger body}',
      '    SET NEW.${6:updated_at} = NOW();',
      'END //',
      'DELIMITER ;$0',
    ],
    description: 'CREATE TRIGGER statement',
    label: 'TRIGGER',
    prefix: 'trigger',
  },
  {
    body: [
      'START TRANSACTION;',
      '',
      '${1:-- Your SQL statements here}',
      'INSERT INTO ${2:table_name} (${3:column}) VALUES (${4:value});',
      'UPDATE ${5:table_name} SET ${6:column} = ${7:value} WHERE ${8:condition};',
      '',
      'COMMIT;$0',
    ],
    description: 'Transaction block',
    label: 'TRANSACTION',
    prefix: 'transaction',
  },
  {
    body: [
      'SELECT ${1:column1},',
      '    CASE',
      '        WHEN ${2:condition1} THEN ${3:result1}',
      '        WHEN ${4:condition2} THEN ${5:result2}',
      '        ELSE ${6:default_result}',
      '    END AS ${7:alias}',
      'FROM ${8:table_name};$0',
    ],
    description: 'CASE WHEN statement',
    label: 'CASE WHEN',
    prefix: 'case_when',
  },
]
